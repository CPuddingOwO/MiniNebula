name: CI Build

on:
  push:
    tags:        # 仅在创建 tag 时触发构建
      - '*'
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        # 为不同系统定义不同的构建工具和编译器
        compiler: [clang]

    runs-on: ${{ matrix.os }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install dependencies (for Linux)
      - name: Install dependencies on Linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install ninja-build clang

      # Step 3: Install dependencies (for Windows)
      - name: Install dependencies on Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install ninja
          choco install llvm

      # Step 4: Read Common.txt file and export parameters
      - name: Read Common.txt
        id: read-common
        run: |
          CMAKE_ARGS=$(cat Scripts/Common.txt | xargs)
          echo "CMAKE_ARGS=$CMAKE_ARGS" >> $GITHUB_ENV

      # Step 5: Update Submodules
      - name: Update submodules
        run: git submodule update --init --recursive

      # Step 6: Configure CMake
      - name: Configure CMake
        run: |
          cmake -G Ninja -B build -S . ${{ env.CMAKE_ARGS }}

      # Step 7: Build the project
      - name: Build with Ninja
        run: |
          cmake --build build

      # Step 8: Package artifacts (optional)
      - name: Create release package
        run: |
          cd build
          zip -r ${{ matrix.os }}-build.zip .
          # Upload artifacts for both platforms
          - name: Upload build artifact
            uses: actions/upload-artifact@v3
            with:
              name: ${{ matrix.os }}-build
              path: build/${{ matrix.os }}-build.zip

  release:
    needs: build  # 在构建完成后触发发布
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Create release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/ubuntu-latest-build.zip
            build/windows-latest-build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
